// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tutor {
  id                  Int                  @id @default(autoincrement())
  institution         String
  subjects            String
  year                String
  name                String
  email               String               @unique
  location            String
  sampleTeachingVideo String
  subjectToTeach      String
  userId              String
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  applications        TuitionApplication[]
}

model Tuition {
  id           Int                  @id @default(autoincrement())
  description  String
  district     String
  location     String
  year         String
  subjects     String
  salary       Int
  mode         String
  postedById   String
  createdAt    DateTime             @default(now())
  updatedAt    DateTime             @updatedAt
  applications TuitionApplication[]
}

model TuitionApplication {
  id        Int      @id @default(autoincrement())
  tuitionId Int
  tutorId   Int
  message   String? // Optional
  status    String   @default("pending")
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  tuition Tuition @relation(fields: [tuitionId], references: [id], onDelete: Cascade)
  tutor   Tutor   @relation(fields: [tutorId], references: [id], onDelete: Cascade)

  @@unique([tuitionId, tutorId]) // Prevent duplicate applications
}
